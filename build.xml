<?xml version="1.0"?>
<project basedir="." default="test" xmlns:ivy="antlib:org.apache.ivy.ant" name="Build script for Vaadin 7 projects">

	<property file="${user.home}/.userdata.properties" />
	<property file="build.properties" />
	<property name="workdir" value="${artifacts}/work" />
	<property name="compiled-classes.dir" value="${workdir}/WEB-INF/classes" />
	<property name="compiled-tests.dir" value="${workdir}/tests/classes" />
	<property name="warfilename" value="webapp.war" />
	<property name="ant.build.javac.source" value="1.8" />
	<property name="ant.build.javac.target" value="1.8" />


	<property name="ivy.install.version" value="2.4.0" />
	<property name="ivy.jar.dir" value="${user.home}/.ant/lib" />
	<property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />

	<target name="download-ivy" unless="offline">

		<mkdir dir="${ivy.jar.dir}" />
		<!-- download Ivy from web site so that it can be used even without any special installation -->
		<get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true" />
	</target>

	<target name="init-ivy" depends="download-ivy">
		<path id="ivy.lib.path">
			<fileset dir="${ivy.jar.dir}" includes="*.jar" />
		</path>
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path" />
	</target>
	

	<target name="clean-ivy" description="Clears the ivy cache (may affect Eclipse as well)">
		<ivy:cleancache />
	</target>
	
	<target name="setup" depends="init-ivy">
		<echo message="Resolving build file dependecies" />
		<ivy:resolve inline="true" organisation="org.eclipse.jetty" module="jetty-server" revision="9.2.7.v20150116" log="quiet"/>
		<ivy:resolve inline="true" organisation="org.eclipse.jetty" module="jetty-ant" revision="9.2.7.v20150116" log="quiet"/>
		<ivy:resolve inline="true" organisation="com.jcraft" module="jsch" revision="0.1.53" log="quiet"/>
		
		<ivy:cachefileset inline="true" organisation="org.eclipse.jetty" module="jetty-server" revision="9.2.7.v20150116" setid="jetty.server" log="quiet"/>
		<ivy:cachefileset inline="true" organisation="org.eclipse.jetty" module="jetty-ant" revision="9.2.7.v20150116" setid="jetty.ant" log="quiet"/>
		<ivy:cachepath inline="true" organisation="com.jcraft" module="jsch" revision="0.1.53" pathid="jsch" log="quiet"/>

	</target>


	<path id="classpath">
		<fileset dir="${webroot}/WEB-INF/lib" erroronmissingdir="no">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${libraries}" erroronmissingdir="no">
			<include name="*.jar" />
		</fileset>
		<fileset refid="ivy.default" />
		<fileset refid="ivy.nodeploy" />

	</path>
	
	<path id="jettypath">
		<fileset refid="jetty.server"/>
		<fileset refid="jetty.ant"/>
	</path>

	<path id="classpath.widgetset">
		<fileset dir="${webroot}/WEB-INF/lib" erroronmissingdir="no">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${libraries}" erroronmissingdir="no">
			<include name="*.jar" />
		</fileset>
		<fileset refid="ivy.widgetset-compile" />
	</path>

	<target name="clean" description="Clears the output of the build script">
		<delete dir="${workdir}" />
		<delete dir="${artifacts}" />
	</target>

	<target name="-init" depends="setup">
		<mkdir dir="${artifacts}" />
		<mkdir dir="${workdir}" />
		<echo message="Resolving ivy dependencies" />
		<ivy:cachefileset setid="ivy.default" conf="default" log="download-only"/>
		<ivy:cachefileset setid="ivy.nodeploy" conf="nodeploy" log="download-only"/>
		<ivy:cachefileset setid="ivy.widgetset-compile" conf="widgetset-compile" log="download-only"/>
	</target>

	<target name="compile-theme" depends="-init, -compile-theme-1, -compile-theme-2">
		<!-- the dependencies do all the work here -->
	</target>

	<target name="-compile-theme-1" if="theme.name">
		<mkdir dir="${workdir}/VAADIN/themes/${theme.name}" />
		<copy todir="${workdir}/VAADIN/themes/${theme.name}">
			<fileset dir="${webroot}/VAADIN/themes/${theme.name}">
				<exclude name="**/*.css" />
				<exclude name="**/*.scss" />
			</fileset>
		</copy>
		<java classname="com.vaadin.sass.SassCompiler" failonerror="yes" fork="yes">
			<classpath refid="classpath" />
			<jvmarg value="-Djava.awt.headless=true" />
			<arg value="${theme.dir}/${theme.name}/styles.scss" />
			<arg value="${workdir}/VAADIN/themes/${theme.name}/styles.css" />
		</java>

	</target>

	<target name="-compile-theme-2" unless="theme.name">
		<echo message="theme.name is not set - skipping theme compilation" />
	</target>

	<target name="compile-project" depends="-init">
		<mkdir dir="${compiled-classes.dir}" />
		<javac destdir="${compiled-classes.dir}" debug="${compile.debug}" includeantruntime="no">
			<src path="${sources}" />
			<classpath refid="classpath" />
		</javac>
	</target>

	<target name="compile-tests" depends="compile-project">
		<mkdir dir="${compiled-tests.dir}" />
		<javac destdir="${compiled-tests.dir}" debug="${compile.debug}" includeantruntime="no">
			<src path="${tests}" />
			<classpath refid="classpath" />
			<classpath path="${compiled-classes.dir}" />
		</javac>
	</target>

	<target name="compile-widgetset" depends="compile-project, -build-widgetset-1, -build-widgetset-2">
		<!-- the dependencies do all the work here -->
	</target>

	<target name="-build-widgetset-1" if="widgetset">
		<java classname="com.google.gwt.dev.Compiler" failonerror="yes" fork="yes">
			<arg value="-war" />
			<arg value="${workdir}/VAADIN/widgetsets" />
			<arg value="${widgetset}" />
			<arg value="-logLevel" />
			<arg value="INFO" />
			<arg value="-strict" />
			<jvmarg value="-Xmx1024M" />
			<jvmarg value="-Xss512M" />
			<jvmarg value="-Djava.awt.headless=true" />
			<classpath>
				<pathelement path="${sources}" />
				<pathelement path="${compiled-classes.dir}" />
				<path refid="classpath.widgetset" />
			</classpath>
			<sysproperty key="vFailIfNotSerializable" value="${failifnotserializable}" />
		</java>

		<!-- cleanup -->
		<delete dir="${workdir}/VAADIN/gwt-unitCache" />
		<delete dir="${workdir}/VAADIN/widgetsets/WEB-INF" />
	</target>

	<target name="-build-widgetset-2" unless="widgetset">
		<echo message="widgetset is not set - skipping widgetset compilation" />
	</target>
	<target name="jetty.run" depends="build-and-package">

		<typedef name="webApp" classname="org.eclipse.jetty.ant.AntWebAppContext" classpathref="jettypath" loaderref="jetty.loader" onerror="ignore" />
		<taskdef classpathref="jettypath" resource="tasks.properties" loaderref="jetty.loader" />

		<jetty.run daemon="true">
			<systemProperties>
				<systemProperty name="org.eclipse.jetty.LEVEL" value="WARN" />
				<systemProperty name="org.eclipse.jetty.util.log.class" value="org.eclipse.jetty.util.log.StrErrLog" />
			</systemProperties>
			<webApp war="${artifacts}/${warfilename}" contextPath="/" />
		</jetty.run>
	</target>

	<target name="test" depends="compile-tests, jetty.run" description="Runs all tests in the test directory that have the word Test in their name">
		<mkdir dir="${junit.output.dir}" />
		<junit fork="yes" printsummary="withOutAndErr" haltonfailure="yes" haltonerror="yes" maxmemory="1024m" forkmode="once">
			<formatter type="xml" />
			<batchtest todir="${junit.output.dir}">
				<fileset dir="${compiled-tests.dir}">
					<include name="**/*Test*" />
				</fileset>
			</batchtest>
			<classpath refid="classpath" />
			<classpath path="${compiled-classes.dir}" />
			<classpath path="${compiled-tests.dir}" />
		</junit>
	</target>
	<target name="testreport" depends="test" description="Creates a nice report on the tests that ran or failed">
		<junitreport todir="${junit.output.dir}">
			<fileset dir="${junit.output.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.output.dir}" />
		</junitreport>
	</target>

	<target name="package-war" depends="-init" description="Packages everything in a WAR that has been deployed in ${workdir}">
		<mkdir dir="${workdir}/WEB-INF/lib" />
		<delete>
			<fileset dir="${workdir}/WEB-INF/lib">
				<include name="**/*-sources.jar" />
				<include name="**/*-javadoc.jar" />
			</fileset>
		</delete>
		<mkdir dir="${workdir}/VAADIN/resources" />
		<copy todir="${workdir}/VAADIN/resources" failonerror="no">
			<fileset dir="${webroot}/VAADIN/resources" />
		</copy>

		<war destfile="${artifacts}/${warfilename}" basedir="${workdir}" webxml="${webroot}/WEB-INF/web.xml">
			<lib dir="${webroot}/WEB-INF/lib" erroronmissingdir="no">
				<include name="*.jar" />
			</lib>
			<lib dir="${libraries}" erroronmissingdir="no">
				<include name="*.jar" />
			</lib>
			<lib refid="ivy.default" />
		</war>
	</target>

	<target name="deploy" depends="test" description="Deploys the project to the remote production server">
		<scp file="${artifacts}/${warfilename}" todir="${username}:${password}@mega.cs.dal.ca:/opt/apache-tomcat-7.0.57/webapps" trust="yes" />
	</target>

	<target name="build-and-package" depends="compile-theme, compile-project, compile-widgetset, package-war">
	</target>


</project>